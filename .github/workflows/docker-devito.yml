name: Publish devito docker images from compiler bases

on:
  release:
    types: [published]
  push:
    branches:
      - main         # Push events on master branch

jobs:
  deploy-devito:
    runs-on: ${{ matrix.runner }}
    env:
      # Use buildkit https://docs.docker.com/develop/develop-images/build_enhancements/ for better build
      DOCKER_BUILDKIT: "1"

    strategy:
      fail-fast: false
      matrix:
        include:
          - base: 'bases:nvidia-nvc'
            tag: 'nvidia-nvc'
            flag: '--gpus all'
            test: 'tests/test_gpu_openacc.py tests/test_gpu_common.py'
            runner: ubuntu-latest

          - base: 'bases:nvidia-clang'
            tag: 'nvidia-clang'
            flag: '--gpus all'
            test: 'tests/test_gpu_openmp.py tests/test_gpu_common.py'
            runner: ubuntu-latest

          # Runtime gpu flags from https://hub.docker.com/r/rocm/tensorflow/
          - base: 'bases:amd'
            tag: 'amd'
            flag: '--network=host --device=/dev/kfd --device=/dev/dri --ipc=host --group-add video'
            test: 'tests/test_gpu_openmp.py'
            runner: ubuntu-latest

          - base: 'bases:cpu-gcc'
            tag: "gcc"
            flag: ''
            test: 'tests/test_operator.py'
            runner: ubuntu-latest

          - base: 'bases:cpu-icc'
            tag: "icc"
            flag: ''
            test: 'tests/test_operator.py'
            runner: ubuntu-latest

    steps:
      - name: Checkout devito
        uses: actions/checkout@v3

      - name: Check event name
        run: echo ${{ github.event_name }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          flavor: |
            latest=false
          images: |
            devitocodes/devito
          # Creates all the tags to be pushed.
          # `event`` is the trigger even (pr for pull request, tag for release)
          # `value/pattern` is the actual tag
          # `enable` is a "if" filter fir that tag
          # `type` is the type of tag
          tags: |
            type=raw,value=${{ matrix.tag }}-dev
            type=semver,pattern={{raw}},prefix=${{ matrix.tag }}-,enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{raw}},value=${{ matrix.tag }}-latest,enable=${{ github.event_name == 'release' }}
            type=raw,value=latest,enable=${{ matrix.base == 'bases:cpu-gcc' }}
            # Legacy "gpu" tag
            type=raw,value=gpu-dev,enable=${{ matrix.base == 'bases:nvidia-nvc' }}
            type=semver,pattern={{raw}},prefix=gpu-,enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{raw}},value=gpu-latest,enable=${{ github.event_name == 'release' }}
            # Legacy "cpu" tag
            type=raw,value=cpu-dev,enable=${{ matrix.base == 'bases:cpu-gcc' }}
            type=semver,pattern={{raw}},prefix=cpu-,enable=${{ github.event_name == 'release' }}
            type=semver,pattern={{raw}},value=cpu-latest,enable=${{ github.event_name == 'release' }}

      - name: Check tags
        run: echo "${{ steps.meta.outputs.tags }}"

